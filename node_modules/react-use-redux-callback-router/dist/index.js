'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var reduxCallbackRouter = require('redux-callback-router');
var react = require('react');
var reactRedux = require('react-redux');

function useCallbackRouter(routes, initialize) {
    if (initialize === void 0) { initialize = true; }
    var store = reactRedux.useStore();
    var initializedRef = react.useRef(!initialize);
    var _a = react.useState(null), result = _a[0], setResult = _a[1];
    var evaluateLocalRef = react.useRef();
    var evaluate = react.useCallback(function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (evaluateLocalRef.current) {
            return evaluateLocalRef.current.apply(evaluateLocalRef, args);
        }
    }, []);
    var handleEvaluateRoute = react.useCallback(function (evaluateResult) {
        setResult(evaluateResult);
        return evaluateResult;
    }, []);
    react.useLayoutEffect(function () {
        var _a = reduxCallbackRouter.registerRoutes(routes, store.dispatch, store.getState, handleEvaluateRoute), unregisterRoutes = _a.unregisterRoutes, evaluateLocal = _a.evaluate;
        evaluateLocalRef.current = evaluateLocal;
        if (!initializedRef.current) {
            initializedRef.current = true;
            evaluateLocal(document.location.pathname, window.history.state, reduxCallbackRouter.ROUTE_CHANGE_INITIALIZE);
        }
        return function () {
            unregisterRoutes();
        };
    }, [store.getState, store.dispatch, routes, handleEvaluateRoute]);
    return [result, evaluate];
}

Object.defineProperty(exports, 'ROUTE_CHANGE_FORCE_PUSH_STATE', {
  enumerable: true,
  get: function () {
    return reduxCallbackRouter.ROUTE_CHANGE_FORCE_PUSH_STATE;
  }
});
Object.defineProperty(exports, 'ROUTE_CHANGE_FORCE_REPLACE_STATE', {
  enumerable: true,
  get: function () {
    return reduxCallbackRouter.ROUTE_CHANGE_FORCE_REPLACE_STATE;
  }
});
Object.defineProperty(exports, 'ROUTE_CHANGE_INITIALIZE', {
  enumerable: true,
  get: function () {
    return reduxCallbackRouter.ROUTE_CHANGE_INITIALIZE;
  }
});
Object.defineProperty(exports, 'ROUTE_CHANGE_POP_STATE', {
  enumerable: true,
  get: function () {
    return reduxCallbackRouter.ROUTE_CHANGE_POP_STATE;
  }
});
Object.defineProperty(exports, 'ROUTE_CHANGE_PUSH_STATE', {
  enumerable: true,
  get: function () {
    return reduxCallbackRouter.ROUTE_CHANGE_PUSH_STATE;
  }
});
Object.defineProperty(exports, 'ROUTE_CHANGE_REPLACE_STATE', {
  enumerable: true,
  get: function () {
    return reduxCallbackRouter.ROUTE_CHANGE_REPLACE_STATE;
  }
});
Object.defineProperty(exports, 'ROUTE_CHANGE_UNKNOWN', {
  enumerable: true,
  get: function () {
    return reduxCallbackRouter.ROUTE_CHANGE_UNKNOWN;
  }
});
exports.useReduxCallbackRouter = useCallbackRouter;
